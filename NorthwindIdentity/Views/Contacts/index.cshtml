@model IEnumerable<Contact>

@{
    ViewData["Title"]="Contacts";
}

<h2>Contacts</h2>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>@(Html.DisplayNameFor(model =>model.Name))</th>
            <th>@(Html.DisplayNameFor(model =>model.Address))</th>
            <th>@(Html.DisplayNameFor(model =>model.City))</th>
            <th>@(Html.DisplayNameFor(model =>model.State))</th>
            <th>@(Html.DisplayNameFor(model =>model.Zip))</th>
            <th>@(Html.DisplayNameFor(model =>model.Email))</th>
            <th>@(Html.DisplayNameFor(model =>model.Status))</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Zip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @* Hiding links from users that don't have permission to change data
                     doesn't secure the app. Hiding links makes the app more user-friendly
                      by displaying only valid links. Users can hack the generated URLs
                       to invoke edit and delete operations on data they don't own.
                        The Razor Page or controller must enforce access checks
                         to secure the data. *@
                    @if ((await _auth.AuthorizeAsync(
                     User, item,
                     ContactOperationsRequirements.Update)).Succeeded)
                    {
                        <a asp-action="Edit" asp-route-id="@item.ContactId">Edit</a>
                        <text> | </text>
                    }

                    <a asp-action="Details" asp-route-id="@item.ContactId">Details</a>

                    @if ((await _auth.AuthorizeAsync(
                     User, item,
                     ContactOperationsRequirements.Delete)).Succeeded)
                    {
                        <text> | </text>
                        <a asp-action="Delete" asp-route-id="@item.ContactId">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>