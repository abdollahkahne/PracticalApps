@using Microsoft.AspNetCore.Components.Routing

<Router AppAssembly="@typeof(App).Assembly" OnNavigateAsync="@onNavigation">
    <Navigating>
        <p>Spining &hellip; </p>
    </Navigating>
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
            <a href="chat">Chat please</a>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private async Task onNavigation(NavigationContext context)
    {
        await Task.Delay(500); // This make the Navigating Parameter rendered
        Console.WriteLine(context.Path); // Navigation context include Path (string) and cancelation Token
        @* If a user navigates to an endpoint but then immediately navigates to a new endpoint, the app shouldn't continue
            running the OnNavigatingAsync callback. We can use cancellation token for that check *@
    }
}


@*
    The Router component can indicate to the user that a page transition is occurring.
    Router Can have 3 top level components:
    1- Found in case of Found Routing which has an object of context which filled with @routeData
    2- NotFound which is used for case of 404 not found blazor page route template which matches this url
    3- Navigating which indicate loading the new page which may be found or not found result happen both getting from Server
    for the first time or from Client side using Navigation Manager or NavLinks (or a). This only usable when we use
    OnNavigateAsync Method asyncly

    It also has other Parameter which used for even handling of component or other paramets:
    4- AppAssembly: Type of Assembly that has the routing templates for the server side rendering
    5- AdditionalAssemblies:similar to 1
    6- PreferExactMatches: Gets or sets a flag to indicate whether route matching should prefer exact matches over
    wildcards. It is obslute now and nothing happen
    7- OnNavigateAsync: NavigationContext=>Task: One usable application of this function is Lazy Loading of Assemblies in
    Blazor Web Assembly. This run in case of Pre-Rendering twice (I think this is not true). So we should consider that into
    account.



*@