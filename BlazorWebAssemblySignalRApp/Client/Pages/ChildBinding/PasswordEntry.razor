<div class="card bg-light mt-3" style="width:22rem ">
    <div class="card-body">
        <h3 class="card-title">Password Component</h3>
        <p class="card-text">
            <label>
                Password:
                <input @oninput="OnPasswordChanged" required type="@(showPassword ? "text" : "password")"
                    value="@password" />
            </label>
            <span class="text-danger">@validationMessage</span>
        </p>
        <button class="btn btn-primary" @onclick="toggleShowPassword">
            @(showPassword ? "Hide Passowrd": "Show password")
        </button>
    </div>
</div>



@code {
    bool showPassword;
    string? validationMessage;
    string? password; // This is empty in first render so the input box is clear!
    [Parameter]
    public string? Password { get; set; }
    [Parameter]
    public EventCallback<string> CustomPasswordChangedDelegateName { get; set; }
    void toggleShowPassword()
    {
        showPassword = !showPassword;
    }
    private async Task OnPasswordChanged(ChangeEventArgs e)
    {
        if (e.Value is not null)
        {
            password = e.Value.ToString();
            if (password is not null && password.Contains(' '))
            {
                validationMessage = "Password should not contain white spaces!";
            }
            else
            {
                validationMessage = "";
            }
        }
        else
        {
            password = "";
            validationMessage = "";
        }
        await CustomPasswordChangedDelegateName.InvokeAsync(password);

    }
}